

active-bots = []

context = local // cloudia - AWS-EC2 - AWS-ECS - local

web-driver {
  chrome-binary = "/Applications/Chromium.app/Contents/MacOS/Chromium"
  firefox-binary = "/Applications/Firefox.app/Contents/MacOS/firefox-bin"

  chromium.cache-dir = "/tmp/chromium/cache-dir"
  chromium.data-path = "/tmp/chromium/data-path"
  firefox.cache-dir = "/tmp/firefox/cache-dir"

  cache.max-entries = 20
  cache.max-age.seconds = 600
}

bot {
  booking {
    name = "Booking"
  }
  almundo {
    name = "Almundo"
  }
  bestday {
    name = "Bestday"
  }
  hoteles-com {
    name = "Hoteles.com"
  }
  despegar-com {
    name = "Despegar.com"
  }
  providers {
    name = "Providers"
  }
}

crawling {

  // Default for all bots:

  parallel-factor = 1
  headers {
    user-agent = "Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0"
  }

  max-retry-task = 0
  max-retry-proxy = 3

  data-base-path = "/tmp/htmls"

  screenshot {
    base-path = "/tmp/screenshots"
    page-ready-timeout-millis = 10000
    resolution-width = 320
    resolution-height = 192
    quality = 25
    type = "none"
  }

  // Config for each bot:

  twitter {
      data-base-path="/tmp/htmls"
      max-retry-task=3
      proxy=false
      webdriver="chromium"
  }

  instagram {
      data-base-path="/tmp/htmls"
      max-retry-task=3
      proxy=false
      webdriver="firefox"
      html_location {
        username_input = "//input[@name='username']"
        password_input = "//input[@name='password']"
        user_avatar = ".//img[@data-testid='user-avatar']"
        comment_button = "//span[@class='_15y0l']/button"
        submit_button = "//button[@type='submit']"
        blocked_banner = "//div[@class='JBIyP']"
        text_area = "//textarea[@data-testid='post-comment-text-area']"
        follow_button = "//button[contains(text(), 'Follow') or contains(text(), 'Seguir')]"
        unfollow_button = "//button[contains(text(), 'Unfollow') or contains(text(), 'Siguiendo')]"
        like_button = "//span[@class='fr66n']//*[name()='svg']"
      }
  }

  bestday {
    wait_for_loader_millis = 600000 // 10 minutes in millis
    proxy-switch = false
    headers {
      user-agent = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/53 (KHTML, like Gecko) Chrome/15.0.87"
    }
    domains {
      MX = "https://www.bestday.com.mx/"
      AR = "https://www.bestday.com.ar/"
    }
    base.html.id = "content"
    screenshot {
      type = "full"
      crop {
        selector {
          hotels = "li.hotel-item"
          hotel.id = "id"
        }
      }
    }
    webdriver = "chromium"
  }

  booking {
    base.html.id = "bodyconstraint"
    screenshot {
      type = "full"
      crop {
        selector {
          hotels = "div[data-hotelid]"
          hotel.id = "data-hotelid"
        }
      }
    }
    webdriver = "chromium"
  }
}

api {
  name = "Optimus Prime"
  port = 9291
}

worker {
  poll_interval = 60 // seconds
}

web-clients {
  captain-global {
    host = "http://localhost:9290"
    endpoints: {
      poll-crawling = "/c-global/crawling/task"
      post-crawling-result = "/c-global/crawling/result"
    }
    cert-path = "..."
  }
}

log {
  rotate {
    enabled = true
    path_file = "/tmp/logs"
    max_size = 10485760 // 1024*1024*10 = 10 MB
    backup_count = 15
  }
  console {
    enabled = true
  }
  level = 10 # CRITICAL = 50, ERROR = 40, WARNING = 30, INFO = 20, DEBUG = 10
}

s3 {
  bucket = "rbt-test"
  endpoint = "s3.amazonaws.com"
}


tracer {
  // sampler {
  //    type = "const"
  //    param = 1
  //}
  sampler {
    type = "ratelimiting"
    param = 0.2
  }
  local_agent {
    reporting_port = 5775
    reporting_host = "robotech-jaeger-01"
  }
  logging = True
  service_name = "optimus-prime"
}

ecs {
  metadata_url = "<url-for-ecs-metadata>"
  prometheus {
    register_url = "<url-prometheus-register>"
    deregister_url = "<url-prometheus-deregister>"
  }
}
dialect.enabled = true
